'use client'
import React, { createContext, useContext, useEffect, useState } from 'react'
const Ctx = createContext<any>(null)
export function CartProvider({children}:{children:React.ReactNode}){ const [cart,setCart]=useState<any[]>([]); useEffect(()=>{ const r=localStorage.getItem('agri_cart'); if(r) setCart(JSON.parse(r)) },[]); useEffect(()=> localStorage.setItem('agri_cart',JSON.stringify(cart)),[cart]); function addItem(p:any){ setCart(prev=>{ const found=prev.find(x=>x.id===p.id); if(found) return prev.map(x=> x.id===p.id?{...x,qty:x.qty+1}:x); return [...prev,{...p,qty:1}] }) } function removeItem(id:string){ setCart(prev=> prev.filter(x=>x.id!==id)) } function updateQty(id:string,qty:number){ if(qty<=0) return removeItem(id); setCart(prev=> prev.map(x=> x.id===id?{...x,qty}:x)) } function clearCart(){ setCart([]) } const total = cart.reduce((s:any,i:any)=> s + i.qty * i.price, 0); return <Ctx.Provider value={{cart,addItem,removeItem,updateQty,clearCart,total}}>{children}</Ctx.Provider> }
export function useCart(){ const ctx = useContext(Ctx); if(!ctx) throw new Error('useCart must be used inside CartProvider'); return ctx }
